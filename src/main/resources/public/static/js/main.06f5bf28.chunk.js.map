{"version":3,"sources":["Dashboard.js","MeasureList.js","Step.js","Utilities.js","MeasureEditor.js","repositories/WebMeasureRepository.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","react_default","a","createElement","Fragment","className","client_default","url","topics","onConnect","console","log","onMessage","msg","MeasureList","_this","this","measuresList","data-testid","Button_default","onClick","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","addMeasure","abrupt","sent","stop","sort","map","measureItem","measureId","measureName","selected","jobStatus","key","concat","e","getMeasure","selectMeasure","progress","CircularProgress_default","variant","value","Component","Step","state","changeRule","bind","assertThisInitialized","changeId","changeParam","_this2","_this$props$item","item","step","rules","deleteStep","_this$props","itemSelected","dragHandle","scale","shadow","dragged","cx","style","transform","boxShadow","type","defaultValue","stepId","onChange","ruleName","successStepId","failureStepId","DeleteTwoTone_default","id","parameters","param","index","ruleParamId","paramName","paramValue","placeholder","_getPlaceHolder","_this$props$item2","ruleParams","onChangeStep","target","filter","ruleParam","field","_this$props$item3","parseInt","_this$props$item4","paramType","ramdomInt","Math","floor","random","compare","b","headers","Content-Type","MeasureEditor","measureList","measure","_changeStep","_changeName","_changeDescription","_stepReorder","_addMeasure","_deleteMeasures","_saveMeasure","_selectMeasure","_processMeasures","measureRepository","_findAllRuleParams","_findAllMeasureListItems","setState","steps","_this$state","_getUniqueRuleNames","hasSteps","measureLogic","_deleteStep","src_MeasureList","_getMeasure","selectedMeasureId","description","_callee2","_context2","_addStep","js_default","itemKey","template","list","onMoveEnd","newList","movedItem","oldIndex","newIndex","container","document","body","lastUpdated","minimumSystemVersion","color","job","measureListItem","measureIds","includes","jobLastUpdated","_this3","forceUpdate","JSON","parse","stringify","push","_this4","_ref2","_callee3","_context3","_findById","_x","apply","arguments","_this5","event","shiftKey","ctrlKey","m","_selectMeasureById","ruleNames","forEach","arr","u","i","l","length","hasOwnProperty","distinct","_this6","DEFAULT_NEW_MEASURE","_callee4","_context4","_this7","selectedMeasureIds","_getSelectedMeasures","_this8","s","MeasureRepository","classCallCheck","createClass","_deleteMeasures2","fetch","method","catch","error","_findAllRuleParams2","then","response","json","_findAllMeasureListItems2","_processMeasures2","_x2","_saveMeasure2","_callee5","_context5","_formatMeasureJson","_x3","_findById2","_callee6","_context6","_x4","App","pages","name","currentPageName","navigate","page","navigationMenuItem","src_Dashboard","src_MeasureEditor","pageName","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06f5bf28.chunk.js","sourcesContent":["import React from 'react';\nimport SockJsClient from 'react-stomp';\n\nconst Dashboard = props => {\n  return (<>\n    <div className='content'>Dashboard</div>\n    <div className='footer'></div>\n    <SockJsClient url='/ws' topics={['/topic/job']}\n      onConnect={() => { console.log('CONNECTED!!!') }}\n      onMessage={(msg) => { console.log(msg); }} />\n  </>)\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass MeasureList extends Component {\n\n  render() {\n    const { measuresList } = this.props;\n\n    return <div className='measure-list' data-testid='measure-list'>\n      <Button onClick={async () => await this.props.addMeasure()}>\n        + Measure\n      </Button>\n      {measuresList && measuresList.sort().map((measureItem) => {\n        const { measureId, measureName, selected, jobStatus } = measureItem;\n\n        return <li\n          key={measureId}\n          data-testid={`measure-id-${measureId}`}\n          className={selected ? 'selected' : ''}\n          onClick={(e) => {\n            this.props.getMeasure(measureId);\n            this.props.selectMeasure(measureId, e);\n          }}>\n          <span>{measureName}</span>\n          {measureItem.progress === 0 &&\n            <CircularProgress\n              className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`}\n            />\n          }\n          {measureItem.progress !== 0 &&\n            <CircularProgress\n              className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`}\n              variant=\"determinate\"\n              value={jobStatus === 'RUNNING' ? measureItem.progress : 100}\n            />}\n        </li>\n      })}\n    </div>\n  }\n}\n\nexport default MeasureList\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\n\nclass Step extends Component {\n\n  state = {\n    changeRule: this.changeRule.bind(this),\n    changeId: this.changeId.bind(this),\n    changeParam: this.changeParam.bind(this)\n  }\n\n  render() {\n    const { step, rules, deleteStep } = this.props.item;\n    const { itemSelected, dragHandle } = this.props;\n    const scale = itemSelected * 0.05 + 1;\n    const shadow = itemSelected * 15 + 1;\n    const dragged = itemSelected !== 0;\n    return <div\n      className={cx('step', { dragged })}\n      style={{\n        transform: `scale(${scale})`,\n        boxShadow: `rgba(0, 0, 0, 0.3) 0px ${shadow}px ${2 * shadow}px 0px`\n      }}\n    >\n      {dragHandle(<div className=\"dragHandle\" />)}\n      <input type='text' defaultValue={step.stepId} onChange={(e) => { this.changeId(e, \"stepId\") }} />\n      <select value={step.ruleName} onChange={(e) => this.changeRule(e)}>\n        {rules.map((ruleName) => <option key={ruleName}> {ruleName} </option>)}\n      </select>\n      <input type='text' defaultValue={step.successStepId} onChange={(e) => { this.changeId(e, \"successStepId\") }} />\n      <input type='text' defaultValue={step.failureStepId} onChange={(e) => { this.changeId(e, \"failureStepId\") }} />\n      <DeleteTwoToneIcon className='delete-step-icon' onClick={() => { deleteStep(step.id) }} />\n      <div className='parameters'>\n        {step.parameters.map((param, index) => {\n          return (<div key={param.ruleParamId} className='param-editor'>\n            <div className='param-name'>{param.paramName}</div>\n            <input\n              className='param-value'\n              type='text' defaultValue={param.paramValue} placeholder={this._getPlaceHolder(param)}\n              onChange={(e) => this.changeParam(e, index)} />\n          </div>)\n        })}\n      </div>\n    </div>\n  }\n\n  changeRule(e) {\n    let { step, ruleParams, onChangeStep } = this.props.item;\n    step.ruleName = e.target.value;\n    step.parameters = ruleParams.filter(ruleParam => ruleParam.paramName && ruleParam.ruleName === e.target.value);\n    onChangeStep(step);\n  }\n\n  changeId(e, field) {\n    let { step, onChangeStep } = this.props.item;\n    step[field] = parseInt(e.target.value);\n    onChangeStep(step);\n  }\n\n  changeParam(e, index) {\n    let { step, onChangeStep } = this.props.item;\n    step.parameters[index].paramValue = e.target.value;\n    onChangeStep(step);\n  }\n\n  getDragHeight() {\n    const DRAG_HEIGHT = 30;\n    return DRAG_HEIGHT;\n  }\n\n  _getPlaceHolder(param) {\n    if(param.paramType === 'DATE') return 'YYYYMMDD'\n    if(param.paramType === 'INTEGER') return '###'\n  }\n\n}\n\nexport default Step;\n","export const distinct = (arr) => {\n  var u = {}, a = [];\n  for (var i = 0, l = arr.length; i < l; ++i) {\n    if (!u.hasOwnProperty(arr[i])) {\n      a.push(arr[i]);\n      u[arr[i]] = 1;\n    }\n  }\n\n  return a;\n}\n\nexport const ramdomInt = () => {\n  return Math.floor(Math.random() * 1000) + 1;\n}\n\nexport const compare = (a, b) => {\n  if (a.measureName < b.measureName)\n    return -1;\n  if (a.measureName > b.measureName)\n    return 1;\n  return 0;\n}\n\nexport const headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","import React, { Component } from 'react';\nimport DraggableList from 'react-draggable-list';\nimport MeasureList from './MeasureList';\nimport Step from './Step';\nimport { compare, distinct, ramdomInt } from './Utilities';\nimport Button from '@material-ui/core/Button';\nimport SockJsClient from 'react-stomp';\n\nclass MeasureEditor extends Component {\n\n  state = {\n    ruleParams: [],\n    measureList: [],\n    measure: null,\n    _changeStep: this._changeStep.bind(this),\n    _changeName: this._changeName.bind(this),\n    _changeDescription: this._changeDescription.bind(this),\n    _stepReorder: this._stepReorder.bind(this),\n    _addMeasure: this._addMeasure.bind(this),\n    _deleteMeasures: this._deleteMeasures.bind(this),\n    _saveMeasure: this._saveMeasure.bind(this),\n    _selectMeasure: this._selectMeasure.bind(this),\n    _processMeasures: this._processMeasures.bind(this),\n  }\n\n  async componentDidMount() {\n    const ruleParams = await this.props.measureRepository._findAllRuleParams();\n    const measureList = await this.props.measureRepository._findAllMeasureListItems();\n    this.setState({ ruleParams, measureList });\n  }\n\n  render() {\n    const { measure, ruleParams, measureList } = this.state;\n    const rules = this._getUniqueRuleNames(ruleParams);\n    let hasSteps = measure && measure.measureLogic && measure.measureLogic.steps\n    let steps;\n\n    if (hasSteps) {\n      steps = measure.measureLogic.steps.map((step, index) => {\n        return {\n          step,\n          rules,\n          index,\n          ruleParams,\n          key: step.id,\n          onChangeStep: this._changeStep(),\n          deleteStep: this._deleteStep(),\n        }\n      });\n    }\n\n    return <>\n      <form className='content measure-editor'>\n        <MeasureList\n          measuresList={measureList}\n          getMeasure={this._getMeasure()}\n          selectMeasure={this._selectMeasure()}\n          selectedMeasureId={measure ? measure.measureId : null}\n          addMeasure={this._addMeasure()} />\n        <div className='measure' data-testid='measure'>\n          {measure &&\n            <>\n              <input className='measure-name' type='text' data-testid='measure-name'\n                value={measure.measureName}\n                onChange={(e) => this._changeName(e)} />\n              <textarea className='measure-description'\n                value={measure.measureLogic.description}\n                onChange={(e) => this._changeDescription(e)} />\n              <Button onClick={async () => { await this._addStep(rules) }}>+ Step</Button>\n            </>}\n          <div>\n            {hasSteps &&\n              <DraggableList\n                itemKey=\"key\"\n                template={Step}\n                list={steps}\n                onMoveEnd={(newList, movedItem, oldIndex, newIndex) => {\n                  this._stepReorder(newList, movedItem, oldIndex, newIndex);\n                }}\n                container={() => document.body}\n              />}\n          </div>\n        </div>\n        <div className='footer'>\n          {measure &&\n            <>\n              <div className='footer-left-section'>\n                <p>{`Last Updated: ${measure.lastUpdated}`}</p>\n                <p>{`Minimum System Version: ${measure.measureLogic.minimumSystemVersion}`}</p>\n              </div>\n              <div className='footer-right-section'>\n                <Button variant=\"contained\" onClick={() => this._saveMeasure()}>\n                  Save\n              </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this._deleteMeasures()}>\n                  Delete\n              </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this._processMeasures()}>\n                  Process\n              </Button>\n              </div>\n            </>}\n        </div>\n      </form>\n      <SockJsClient url='/ws' topics={['/topic/job']}\n        onMessage={(job) => {\n          console.log(job);\n          let measureList = this.state.measureList;\n          measureList.map(measureListItem => {\n            if (job.measureIds.includes(measureListItem.measureId)) {\n              measureListItem.progress = job.progress;\n              measureListItem.jobStatus = job.jobStatus;\n              measureListItem.jobLastUpdated = job.lastUpdated;\n            }\n            return measureListItem;\n          });\n\n          this.setState({ measureList });\n        }} />\n    </>\n  }\n\n  _changeName(e) {\n    let measure = this.state.measure;\n    measure.measureName = e.target.value;\n    this.setState({ measure });\n  }\n\n  _changeDescription(e) {\n    let measure = this.state.measure;\n    measure.measureLogic.description = e.target.value;\n    this.setState({ measure });\n  }\n\n  _changeStep() {\n    return (step) => {\n      let { measure } = this.state;\n      measure.measureLogic.steps[step.index] = step;\n      this.setState({ measure });\n      this.forceUpdate();\n    }\n  }\n\n  _stepReorder(newList, movedItem, oldIndex, newIndex) {\n    let { measure } = this.state;\n    measure.measureLogic.steps = newList.map((item) => JSON.parse(JSON.stringify(item.step)));\n    this.setState({ measure });\n  }\n\n  _addStep(rules) {\n    let measure = this.state.measure;\n    if (!measure.measureLogic.steps) {\n      measure.measureLogic.steps = [];\n    }\n\n    measure.measureLogic.steps.push({\n      rules,\n      id: ramdomInt(),\n      ruleName: \"(select)\",\n      parameters: [],\n      stepId: 0,\n      successStepId: 0,\n      failureStepId: 0\n    })\n    this.setState({ measure });\n  }\n\n  _getMeasure() {\n    return async (id) => {\n      const measure = await this.props.measureRepository._findById(id);\n      this.setState({ measure });\n    }\n  }\n\n  _selectMeasure() {\n    return (id, event) => {\n      let measureList = this.state.measureList;\n\n      if (event.shiftKey || event.ctrlKey) {\n        measureList.map(m => this._selectMeasureById(m, id))\n      } else {\n        measureList.map(m => m.selected = false)\n        measureList.map(m => this._selectMeasureById(m, id))\n      }\n\n      this.setState({ measureList });\n    }\n  }\n\n  _selectMeasureById(m, id) {\n    if (m.measureId === id) {\n      m.selected = true;\n    }\n  }\n\n  _getUniqueRuleNames(ruleParams) {\n    let ruleNames = ['(select)'];\n    ruleParams.forEach(ruleParam => ruleNames.push(ruleParam.ruleName));\n    return distinct(ruleNames).sort()\n  }\n\n  _addMeasure() {\n    const DEFAULT_NEW_MEASURE = {\n      measureId: -1,\n      measureName: 'New Measure',\n      measureLogic: {\n        description: 'Describe...'\n      }\n    }\n\n    return async () => {\n      let measure = await this.props.measureRepository._saveMeasure(DEFAULT_NEW_MEASURE);\n      let { measureList } = this.state;\n      measureList.push({\n        measureId: measure.measureId,\n        measureName: measure.measureName,\n        jobStatus: 'IDLE'\n      });\n      measureList.sort(compare);\n      this.setState({ measure, measureList });\n    }\n  }\n\n  async _saveMeasure() {\n    let measure = await this.props.measureRepository._saveMeasure(this.state.measure);\n    let measureList = await this.props.measureRepository._findAllMeasureListItems();\n    measureList.map(m => this._selectMeasureById(m, measure.measureId));\n    this.setState({ measure, measureList })\n    return measure;\n  }\n\n  async _processMeasures() {\n    let selectedMeasureIds = this._getSelectedMeasures();\n    await this.props.measureRepository._processMeasures(selectedMeasureIds);\n    let measureList = this.state.measureList.map(m => {\n      if (selectedMeasureIds.includes(m.measureId)) {\n        m.jobStatus = \"RUNNING\";\n        m.selected = false;\n        return m;\n      };\n      return m;\n    });\n    this.setState({ measureList, measure: null });\n  }\n\n  async _deleteMeasures() {\n    let selectedMeasureIds = this._getSelectedMeasures();\n    await this.props.measureRepository._deleteMeasures(selectedMeasureIds);\n    let measureList = this.state.measureList.filter(m => !selectedMeasureIds.includes(m.measureId));\n    this.setState({ measureList, measure: null });\n  }\n\n  _deleteStep() {\n    return (id) => {\n      let steps = this.state.measure.measureLogic.steps.filter(s => s.id !== id);\n      let measure = this.state.measure;\n      measure.measureLogic.steps = steps;\n      this.setState({ measure });\n    }\n  }\n\n  _getSelectedMeasures() {\n    let selectedMeasureIds = [];\n    this.state.measureList.forEach(measureListItem => {\n      if (measureListItem.selected) {\n        selectedMeasureIds.push(measureListItem.measureId);\n      }\n    });\n    return selectedMeasureIds;\n  }\n}\n\nexport default MeasureEditor\n","import { headers, ramdomInt } from '../Utilities';\n\nexport class MeasureRepository {\n\n  async _deleteMeasures(measureIds) {\n    fetch(`/measure`, { headers, method: 'DELETE', body: JSON.stringify(measureIds) })\n      .catch((e) => console.error(e));\n  }\n\n  async _findAllRuleParams() {\n    return fetch('/rules_params')\n      .then((response) => response.json())\n      .catch((e) => console.error(e));\n  }\n\n  async _findAllMeasureListItems() {\n    return fetch('/measure_list')\n      .then((response) => response.json())\n      .catch((e) => console.error(e));\n  }\n\n  async _processMeasures(measureIds) {\n    return fetch(`/process`, { headers, method: 'POST', body: JSON.stringify(measureIds) })\n      .catch((e) => console.error(e));\n  }\n\n  async _saveMeasure(body) {\n    return await fetch('/measure', { headers, method: 'PUT', body: JSON.stringify(body) })\n      .then((response) => response.json())\n      .then((json) => this._formatMeasureJson(json))\n      .catch((e) => console.error(e));\n  }\n\n  async _findById(id) {\n    return await fetch(`/measure?measureId=${id}`)\n      .then((response) => response.json())\n      .then((json) => this._formatMeasureJson(json))\n      .catch((e) => console.error(e));\n  }\n\n  _formatMeasureJson(json) {\n    if (json.measureLogic.steps) {\n      json.measureLogic.steps.map(step => {\n        step.id = ramdomInt();\n        if(step.parameters) {\n          step.parameters.map(param => {\n            if(!param.ruleParamId) {\n              param.ruleParamId = ramdomInt();\n            }\n            return param;\n          });\n        }\n        return step;\n      });\n      return json;\n    }\n    return json;\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport MeasureEditor from './MeasureEditor';\nimport { MeasureRepository } from './repositories/WebMeasureRepository'\n// import { MeasureRepository } from './spec/repositories/FakeMeasureRepository'\n\nclass App extends Component {\n\n  pages = [\n    { name: 'Dashboard' },\n    { name: 'Measure Editor' }\n  ]\n\n  state = {\n    currentPageName: 'Measure Editor',\n    navigate: this.navigate.bind(this)\n  }\n\n  navigate(page) {\n    this.setState({ currentPageName: page });\n  }\n\n  render() {\n    return <div className='container'>\n      <header className=\"header\">\n        <nav className='navigation' data-testid='navigation'>\n          {this.pages.map(page => this.navigationMenuItem(page.name))}\n        </nav>\n      </header>\n      <div className='content' data-testid='content'>\n        {(() => {\n          switch (this.state.currentPageName) {\n            case \"Dashboard\": return <Dashboard />;\n            case \"Measure Editor\": return <MeasureEditor measureRepository={new MeasureRepository()} />;\n            default: return <Dashboard />;\n          }\n        })()}\n      </div>\n    </div>\n  }\n\n  navigationMenuItem(pageName) {\n    return <div\n      key={pageName}\n      data-testid={pageName}\n      onClick={() => this.navigate(pageName)}\n      className={this.state.currentPageName === pageName ? 'selected' : ''}>{pageName}\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}