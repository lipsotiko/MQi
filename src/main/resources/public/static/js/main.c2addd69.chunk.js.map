{"version":3,"sources":["Dashboard.js","MeasureList.js","Step.js","Utilities.js","MeasureEditor.js","repositories/WebMeasureRepository.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","react_default","a","createElement","Fragment","className","client_default","url","process","topics","onConnect","console","log","onMessage","msg","MeasureList","_this","this","measuresList","data-testid","Button_default","onClick","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","addMeasure","abrupt","sent","stop","sort","map","measureItem","progress","measureId","measureName","selected","jobStatus","CircularProgress_default","concat","variant","value","key","e","getMeasure","selectMeasure","Component","Step","state","changeRule","bind","assertThisInitialized","changeId","changeParam","_this2","_this$props$item","item","step","rules","deleteStep","_this$props","itemSelected","dragHandle","scale","shadow","dragged","cx","style","transform","boxShadow","type","defaultValue","stepId","onChange","ruleName","successStepId","failureStepId","DeleteTwoTone_default","id","parameters","param","index","ruleParamId","paramName","paramValue","placeholder","_getPlaceHolder","_this$props$item2","ruleParams","onChangeStep","target","filter","ruleParam","field","_this$props$item3","parseInt","_this$props$item4","paramType","ramdomInt","Math","floor","random","compare","b","headers","Content-Type","MeasureEditor","measureList","measure","_changeStep","_changeName","_changeDescription","_stepReorder","_addMeasure","_deleteMeasures","_saveMeasure","_selectMeasure","_processMeasures","measureRepository","_findAllRuleParams","_findAllMeasureListItems","setState","steps","_this$state","_getUniqueRuleNames","hasSteps","measureLogic","_deleteStep","src_MeasureList","_getMeasure","selectedMeasureId","description","_callee2","_context2","_addStep","js_default","itemKey","template","list","onMoveEnd","newList","movedItem","oldIndex","newIndex","container","document","body","lastUpdated","minimumSystemVersion","color","job","measureListItem","measureIds","includes","jobLastUpdated","_this3","forceUpdate","JSON","parse","stringify","push","_this4","_ref2","_callee3","_context3","_findById","_x","apply","arguments","_this5","event","shiftKey","ctrlKey","ruleNames","forEach","arr","u","i","l","length","hasOwnProperty","distinct","_this6","DEFAULT_NEW_MEASURE","_callee4","_context4","selectedMeasureIds","_getSelectedMeasures","m","_this7","s","MeasureRepository","classCallCheck","createClass","_deleteMeasures2","fetch","method","catch","error","_findAllRuleParams2","then","response","json","_findAllMeasureListItems2","_processMeasures2","_x2","_saveMeasure2","_callee5","_context5","_formatMeasureJson","_x3","_findById2","_callee6","_context6","_x4","App","currentTabValue","AppBar_default","Tabs_default","classes","root","v","Tab_default","label","src_Dashboard","src_MeasureEditor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2addd69.chunk.js","sourcesContent":["import React from 'react';\nimport SockJsClient from 'react-stomp';\n\nconst Dashboard = props => {\n  return (<>\n    <div className='content'>Dashboard</div>\n    <div className='footer'></div>\n    <SockJsClient url={process.env.REACT_APP_WS_URL} topics={['/topic/job']}\n      onConnect={() => { console.log('CONNECTED!!!') }}\n      onMessage={(msg) => { console.log(msg); }} />\n  </>)\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass MeasureList extends Component {\n\n  render() {\n    const { measuresList } = this.props;\n\n    return <div className='measure-list' data-testid='measure-list'>\n      <Button onClick={async () => await this.props.addMeasure()}>\n        + Measure\n      </Button>\n      {measuresList && measuresList.sort().map((measureItem) => {\n        const { measureId, measureName, selected, jobStatus } = measureItem;\n\n        let progress;\n\n        if (measureItem.jobStatus === 'RUNNING' && measureItem.progress === 0) {\n          progress = <CircularProgress className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`} />\n        } else {\n          progress = <CircularProgress\n            className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`}\n            variant=\"determinate\"\n            value={jobStatus === 'RUNNING' ? measureItem.progress : 100}\n          />\n        }\n        return <li\n          key={measureId}\n          data-testid={`measure-id-${measureId}`}\n          className={selected ? 'selected' : ''}\n          onClick={(e) => {\n            this.props.getMeasure(measureId);\n            this.props.selectMeasure(measureId, e);\n          }}>\n          <span>{measureName}</span>\n          {progress}\n        </li>\n      })}\n    </div>\n  }\n}\n\nexport default MeasureList\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\n\nclass Step extends Component {\n\n  state = {\n    changeRule: this.changeRule.bind(this),\n    changeId: this.changeId.bind(this),\n    changeParam: this.changeParam.bind(this)\n  }\n\n  render() {\n    const { step, rules, deleteStep } = this.props.item;\n    const { itemSelected, dragHandle } = this.props;\n    const scale = itemSelected * 0.05 + 1;\n    const shadow = itemSelected * 15 + 1;\n    const dragged = itemSelected !== 0;\n    return <div\n      className={cx('step', { dragged })}\n      style={{\n        transform: `scale(${scale})`,\n        boxShadow: `rgba(0, 0, 0, 0.3) 0px ${shadow}px ${2 * shadow}px 0px`\n      }}\n    >\n      {dragHandle(<div className=\"dragHandle\" />)}\n      <input type='text' defaultValue={step.stepId} onChange={(e) => { this.changeId(e, \"stepId\") }} />\n      <select value={step.ruleName} onChange={(e) => this.changeRule(e)}>\n        {rules.map((ruleName) => <option key={ruleName}> {ruleName} </option>)}\n      </select>\n      <input type='text' defaultValue={step.successStepId} onChange={(e) => { this.changeId(e, \"successStepId\") }} />\n      <input type='text' defaultValue={step.failureStepId} onChange={(e) => { this.changeId(e, \"failureStepId\") }} />\n      <DeleteTwoToneIcon className='delete-step-icon' onClick={() => { deleteStep(step.id) }} />\n      <div className='parameters'>\n        {step.parameters.map((param, index) => {\n          return (<div key={param.ruleParamId} className='param-editor'>\n            <div className='param-name'>{param.paramName}</div>\n            <input\n              className='param-value'\n              type='text' defaultValue={param.paramValue} placeholder={this._getPlaceHolder(param)}\n              onChange={(e) => this.changeParam(e, index)} />\n          </div>)\n        })}\n      </div>\n    </div>\n  }\n\n  changeRule(e) {\n    let { step, ruleParams, onChangeStep } = this.props.item;\n    step.ruleName = e.target.value;\n    step.parameters = ruleParams.filter(ruleParam => ruleParam.paramName && ruleParam.ruleName === e.target.value);\n    onChangeStep(step);\n  }\n\n  changeId(e, field) {\n    let { step, onChangeStep } = this.props.item;\n    step[field] = parseInt(e.target.value);\n    onChangeStep(step);\n  }\n\n  changeParam(e, index) {\n    let { step, onChangeStep } = this.props.item;\n    step.parameters[index].paramValue = e.target.value;\n    onChangeStep(step);\n  }\n\n  getDragHeight() {\n    const DRAG_HEIGHT = 30;\n    return DRAG_HEIGHT;\n  }\n\n  _getPlaceHolder(param) {\n    if(param.paramType === 'DATE') return 'YYYYMMDD'\n    if(param.paramType === 'INTEGER') return '###'\n  }\n\n}\n\nexport default Step;\n","export const distinct = (arr) => {\n  var u = {}, a = [];\n  for (var i = 0, l = arr.length; i < l; ++i) {\n    if (!u.hasOwnProperty(arr[i])) {\n      a.push(arr[i]);\n      u[arr[i]] = 1;\n    }\n  }\n\n  return a;\n}\n\nexport const ramdomInt = () => {\n  return Math.floor(Math.random() * 1000) + 1;\n}\n\nexport const compare = (a, b) => {\n  if (a.measureName < b.measureName)\n    return -1;\n  if (a.measureName > b.measureName)\n    return 1;\n  return 0;\n}\n\nexport const headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","import React, { Component } from 'react';\nimport DraggableList from 'react-draggable-list';\nimport MeasureList from './MeasureList';\nimport Step from './Step';\nimport { compare, distinct, ramdomInt } from './Utilities';\nimport Button from '@material-ui/core/Button';\nimport SockJsClient from 'react-stomp';\n\nclass MeasureEditor extends Component {\n\n  state = {\n    ruleParams: [],\n    measureList: [],\n    measure: null,\n    _changeStep: this._changeStep.bind(this),\n    _changeName: this._changeName.bind(this),\n    _changeDescription: this._changeDescription.bind(this),\n    _stepReorder: this._stepReorder.bind(this),\n    _addMeasure: this._addMeasure.bind(this),\n    _deleteMeasures: this._deleteMeasures.bind(this),\n    _saveMeasure: this._saveMeasure.bind(this),\n    _selectMeasure: this._selectMeasure.bind(this),\n    _processMeasures: this._processMeasures.bind(this),\n  }\n\n  async componentDidMount() {\n    const ruleParams = await this.props.measureRepository._findAllRuleParams();\n    const measureList = await this.props.measureRepository._findAllMeasureListItems();\n    this.setState({ ruleParams, measureList });\n  }\n\n  render() {\n    const { measure, ruleParams, measureList } = this.state;\n    const rules = this._getUniqueRuleNames(ruleParams);\n    let hasSteps = measure && measure.measureLogic && measure.measureLogic.steps\n    let steps;\n\n    if (hasSteps) {\n      steps = measure.measureLogic.steps.map((step, index) => {\n        return {\n          step,\n          rules,\n          index,\n          ruleParams,\n          key: step.id,\n          onChangeStep: this._changeStep(),\n          deleteStep: this._deleteStep(),\n        }\n      });\n    }\n\n    return <>\n      <form className='content measure-editor'>\n        <MeasureList\n          measuresList={measureList}\n          getMeasure={this._getMeasure()}\n          selectMeasure={this._selectMeasure()}\n          selectedMeasureId={measure ? measure.measureId : null}\n          addMeasure={this._addMeasure()} />\n        <div className='measure' data-testid='measure'>\n          {measure &&\n            <>\n              <input className='measure-name' type='text' data-testid='measure-name'\n                value={measure.measureName}\n                onChange={(e) => this._changeName(e)} />\n              <textarea className='measure-description'\n                value={measure.measureLogic.description}\n                onChange={(e) => this._changeDescription(e)} />\n              <Button onClick={async () => { await this._addStep(rules) }}>+ Step</Button>\n            </>}\n          <div>\n            {hasSteps &&\n              <DraggableList\n                itemKey=\"key\"\n                template={Step}\n                list={steps}\n                onMoveEnd={(newList, movedItem, oldIndex, newIndex) => {\n                  this._stepReorder(newList, movedItem, oldIndex, newIndex);\n                }}\n                container={() => document.body}\n              />}\n          </div>\n        </div>\n        <div className='footer'>\n          {measure &&\n            <>\n              <div className='footer-left-section'>\n                <p>{`Last Updated: ${measure.lastUpdated}`}</p>\n                <p>{`Minimum System Version: ${measure.measureLogic.minimumSystemVersion}`}</p>\n              </div>\n              <div className='footer-right-section'>\n                <Button variant=\"contained\" onClick={() => this._saveMeasure()}>\n                  Save\n              </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this._deleteMeasures()}>\n                  Delete\n              </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this._processMeasures()}>\n                  Process\n              </Button>\n              </div>\n            </>}\n        </div>\n      </form>\n      <SockJsClient url={process.env.REACT_APP_WS_URL} topics={['/topic/job']}\n        onMessage={(job) => {\n          console.log(job);\n          let measureList = this.state.measureList;\n          measureList.map(measureListItem => {\n            if (job.measureIds.includes(measureListItem.measureId) &&\n              !(job.jobStatus === 'RUNNING' && measureListItem.jobStatus !== 'RUNNING')\n            ) {\n              measureListItem.progress = job.progress;\n              measureListItem.jobStatus = job.jobStatus;\n              measureListItem.jobLastUpdated = job.lastUpdated;\n            }\n            return measureListItem;\n          });\n\n          this.setState({ measureList });\n        }} />\n    </>\n  }\n\n  _changeName(e) {\n    let measure = this.state.measure;\n    measure.measureName = e.target.value;\n    this.setState({ measure });\n  }\n\n  _changeDescription(e) {\n    let measure = this.state.measure;\n    measure.measureLogic.description = e.target.value;\n    this.setState({ measure });\n  }\n\n  _changeStep() {\n    return (step) => {\n      let { measure } = this.state;\n      measure.measureLogic.steps[step.index] = step;\n      this.setState({ measure });\n      this.forceUpdate();\n    }\n  }\n\n  _stepReorder(newList, movedItem, oldIndex, newIndex) {\n    let { measure } = this.state;\n    measure.measureLogic.steps = newList.map((item) => JSON.parse(JSON.stringify(item.step)));\n    this.setState({ measure });\n  }\n\n  _addStep(rules) {\n    let measure = this.state.measure;\n    if (!measure.measureLogic.steps) {\n      measure.measureLogic.steps = [];\n    }\n\n    measure.measureLogic.steps.push({\n      rules,\n      id: ramdomInt(),\n      ruleName: \"(select)\",\n      parameters: [],\n      stepId: 0,\n      successStepId: 0,\n      failureStepId: 0\n    })\n    this.setState({ measure });\n  }\n\n  _getMeasure() {\n    return async (id) => {\n      const measure = await this.props.measureRepository._findById(id);\n      this.setState({ measure });\n    }\n  }\n\n  _selectMeasure() {\n    return (measureId, event) => {\n      let measureList = this.state.measureList;\n\n      if (event.shiftKey || event.ctrlKey) {\n        measureList.map(measureListItem => {\n          if (measureListItem.measureId === measureId) {\n            measureListItem.selected = true;\n            return measureListItem;            \n          }\n          return measureListItem;\n        })\n      } else {\n        measureList.map(measureListItem => measureListItem.selected = false)\n        measureList.map(measureListItem => {\n          if (measureListItem.measureId === measureId) {\n            measureListItem.selected = true;\n            return measureListItem;\n          }\n          return measureListItem;\n        })\n      }\n\n      this.setState({ measureList });\n    }\n  }\n\n  _getUniqueRuleNames(ruleParams) {\n    let ruleNames = ['(select)'];\n    ruleParams.forEach(ruleParam => ruleNames.push(ruleParam.ruleName));\n    return distinct(ruleNames).sort()\n  }\n\n  _addMeasure() {\n    const DEFAULT_NEW_MEASURE = {\n      measureId: -1,\n      measureName: 'New Measure',\n      measureLogic: {\n        description: 'Describe...'\n      }\n    }\n\n    return async () => {\n      let measure = await this.props.measureRepository._saveMeasure(DEFAULT_NEW_MEASURE);\n      let { measureList } = this.state;\n      measureList.push({\n        measureId: measure.measureId,\n        measureName: measure.measureName,\n        jobStatus: 'IDLE'\n      });\n      measureList.sort(compare);\n      this.setState({ measure, measureList });\n    }\n  }\n\n  async _saveMeasure() {\n    let measure = await this.props.measureRepository._saveMeasure(this.state.measure);\n    let measureList = await this.props.measureRepository._findAllMeasureListItems();\n    measureList.map(measureListItem => {\n      if (measureListItem.measureId === measure.measureId) {\n        measureListItem.selected = true;\n        return measureListItem;\n      }\n      return measureListItem;\n    });\n    this.setState({ measure, measureList })\n    return measure;\n  }\n\n  async _processMeasures() {\n    let selectedMeasureIds = this._getSelectedMeasures();\n    await this.props.measureRepository._processMeasures(selectedMeasureIds);\n    let measureList = this.state.measureList.map(m => {\n      if (selectedMeasureIds.includes(m.measureId)) {\n        m.jobStatus = \"RUNNING\";\n        m.selected = false;\n        return m;\n      };\n      return m;\n    });\n    this.setState({ measureList, measure: null });\n  }\n\n  async _deleteMeasures() {\n    let selectedMeasureIds = this._getSelectedMeasures();\n    await this.props.measureRepository._deleteMeasures(selectedMeasureIds);\n    let measureList = this.state.measureList.filter(m => !selectedMeasureIds.includes(m.measureId));\n    this.setState({ measureList, measure: null });\n  }\n\n  _deleteStep() {\n    return (id) => {\n      let steps = this.state.measure.measureLogic.steps.filter(s => s.id !== id);\n      let measure = this.state.measure;\n      measure.measureLogic.steps = steps;\n      this.setState({ measure });\n    }\n  }\n\n  _getSelectedMeasures() {\n    let selectedMeasureIds = [];\n    this.state.measureList.forEach(measureListItem => {\n      if (measureListItem.selected) {\n        selectedMeasureIds.push(measureListItem.measureId);\n      }\n    });\n    return selectedMeasureIds;\n  }\n}\n\nexport default MeasureEditor\n","import { headers, ramdomInt } from '../Utilities';\n\nexport class MeasureRepository {\n\n  async _deleteMeasures(measureIds) {\n    fetch(`/measure`, { headers, method: 'DELETE', body: JSON.stringify(measureIds) })\n      .catch((e) => console.error(e));\n  }\n\n  async _findAllRuleParams() {\n    return fetch('/rules_params')\n      .then((response) => response.json())\n      .catch((e) => console.error(e));\n  }\n\n  async _findAllMeasureListItems() {\n    return fetch('/measure_list')\n      .then((response) => response.json())\n      .catch((e) => console.error(e));\n  }\n\n  async _processMeasures(measureIds) {\n    return fetch(`/process`, { headers, method: 'POST', body: JSON.stringify(measureIds) })\n      .catch((e) => console.error(e));\n  }\n\n  async _saveMeasure(body) {\n    return await fetch('/measure', { headers, method: 'PUT', body: JSON.stringify(body) })\n      .then((response) => response.json())\n      .then((json) => this._formatMeasureJson(json))\n      .catch((e) => console.error(e));\n  }\n\n  async _findById(id) {\n    return await fetch(`/measure?measureId=${id}`)\n      .then((response) => response.json())\n      .then((json) => this._formatMeasureJson(json))\n      .catch((e) => console.error(e));\n  }\n\n  _formatMeasureJson(json) {\n    if (json.measureLogic.steps) {\n      json.measureLogic.steps.map(step => {\n        step.id = ramdomInt();\n        if(step.parameters) {\n          step.parameters.map(param => {\n            if(!param.ruleParamId) {\n              param.ruleParamId = ramdomInt();\n            }\n            return param;\n          });\n        }\n        return step;\n      });\n      return json;\n    }\n    return json;\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Dashboard from './Dashboard';\nimport MeasureEditor from './MeasureEditor';\nimport { MeasureRepository } from './repositories/WebMeasureRepository'\n// import { MeasureRepository } from './spec/repositories/FakeMeasureRepository'\n\nclass App extends Component {\n\n  state = {\n    currentTabValue: 1,\n  }\n\n  render() {\n    return <div className='container'>\n      <nav data-testid='navigation'>\n        <AppBar>\n          <Tabs\n            classes={{ root: 'navigation' }}\n            data-testid='navigation'\n            value={this.state.currentTabValue} onChange={(e, v) => {\n              this.setState({ currentTabValue: v })\n            }}>\n            <Tab data-testid='dashboard' label='Dashboard' />\n            <Tab data-testid='measure-editor' label='Measure Editor' />\n          </Tabs>\n        </AppBar>\n      </nav>\n      <div className='content' data-testid='content'>\n        {(() => {\n          switch (this.state.currentTabValue) {\n            case 0: return <Dashboard />;\n            case 1: return <MeasureEditor measureRepository={new MeasureRepository()} />;\n            default: return <Dashboard />;\n          }\n        })()}\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}