{"version":3,"sources":["MeasureList.js","Footer.js","Navigation.js","MeasureProgressWsClient.js","Shared.js","Reporting.js","Step.js","Utilities.js","MeasureEditor.js","App.js","serviceWorker.js","repositories/WebMeasureRepository.js","repositories/WebResultsRepository.js","index.js"],"names":["MeasureList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","measureList","_this2","measuresList","react_default","a","createElement","className","data-testid","sort","map","measureItem","progress","measureId","measureName","selected","jobStatus","CircularProgress_default","concat","variant","value","key","onClick","e","selectMeasure","Component","Footer","_this$props","measure","saveMeasure","deleteMeasures","processMeasures","Fragment","lastUpdated","measureLogic","minimumSystemVersion","Button_default","color","Navigation","AppBar_default","style","background","Grid_default","justify","container","item","Tabs_default","currentTab","onChange","v","setTab","Tab_default","label","rightButtons","MeasureProgressWsClient","process","TEST","client_default","url","topics","onMessage","job","console","log","measureListItem","measureIds","includes","jobLastUpdated","updateMeasureList","_selectMeasure","component","event","shiftKey","ctrlKey","setState","_selectMultipleMeasuresListItemById","_selectMeasureListItemById","_deleteMeasures","_ref","asyncToGenerator","regenerator_default","mark","_callee","selectedMeasureIds","wrap","_context","prev","next","_getSelectedMeasureIds","measureRepository","filter","m","stop","_x","apply","arguments","_processMeasures","_ref2","_callee2","_context2","_x2","forEach","push","Reporting","measureSummary","_findAllMeasureListItems","_this$state","src_Navigation","src_MeasureList","_getMeasureResultSummary","displayAddBtn","selectedMeasureId","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","resultCode","count","src_Footer","abrupt","sent","src_MeasureProgressWsClient","_this3","_callee3","id","_context3","_findById","resultsRepository","_summary","Step","changeRule","bind","assertThisInitialized","changeId","changeParam","_this$props$item","step","rules","deleteStep","itemSelected","dragHandle","scale","shadow","dragged","cx","transform","boxShadow","type","defaultValue","stepId","ruleName","successStepId","failureStepId","DeleteTwoTone_default","parameters","param","index","ruleParamId","paramName","paramValue","placeholder","_getPlaceHolder","_this$props$item2","ruleParams","onChangeStep","target","ruleParam","field","_this$props$item3","parseInt","_this$props$item4","paramType","ramdomInt","Math","floor","random","compare","b","headers","Content-Type","MeasureEditor","_changeStep","_changeName","_changeDescription","_stepReorder","_addMeasure","_saveMeasure","_findAllRuleParams","steps","_getUniqueRuleNames","hasSteps","_deleteStep","_addStep","_getMeasure","addMeasure","js_default","itemKey","template","list","onMoveEnd","newList","movedItem","oldIndex","newIndex","document","body","TextField_default","margin","multiline","rowsMax","description","_callee4","_context4","_callee5","_context5","forceUpdate","JSON","parse","stringify","_this4","_ref5","_callee6","_context6","ruleNames","arr","u","i","l","length","hasOwnProperty","distinct","_this5","DEFAULT_NEW_MEASURE","_callee7","_context7","_this6","s","App","currentTabValue","src_Reporting","_setTab","src_MeasureEditor","Boolean","window","location","hostname","match","MeasureRepository","createClass","_deleteMeasures2","fetch","method","catch","error","_findAllRuleParams2","then","response","json","_findAllMeasureListItems2","_processMeasures2","_saveMeasure2","_formatMeasureJson","_x3","_findById2","_x4","ResultsRepository","_summary2","_detail2","_ruleTrace2","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3022ad3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass MeasureList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      measureList: this.props.measureList\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { measuresList } = this.props;\r\n\r\n    return <div className='measure-list' data-testid='measure-list'>\r\n      {measuresList && measuresList.sort().map((measureItem) => {\r\n        const { measureId, measureName, selected, jobStatus } = measureItem;\r\n\r\n        let progress;\r\n\r\n        if (measureItem.jobStatus === 'RUNNING' && measureItem.progress === 0) {\r\n          progress = <CircularProgress className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`} />\r\n        } else {\r\n          progress = <CircularProgress\r\n            className={`circular-progress ${jobStatus ? jobStatus : 'IDLE'}`}\r\n            variant=\"determinate\"\r\n            value={jobStatus === 'RUNNING' ? measureItem.progress : 100}\r\n          />\r\n        }\r\n        return <li\r\n          key={measureId}\r\n          data-testid={`measure-id-${measureId}`}\r\n          className={selected ? 'selected' : ''}\r\n          onClick={(e) => {\r\n            this.props.onClick(measureId);\r\n            this.props.selectMeasure(measureId, e);\r\n          }}>\r\n          <span>{measureName}</span>\r\n          {progress}\r\n        </li>\r\n      })}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default MeasureList\r\n","import Button from '@material-ui/core/Button';\r\nimport React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { measure, saveMeasure, deleteMeasures, processMeasures } = this.props;\r\n\r\n    return <>\r\n      <div className='footer-left-section'>\r\n        <p>{`Last Updated: ${measure.lastUpdated}`}</p>\r\n        <p>{`Minimum System Version: ${measure.measureLogic.minimumSystemVersion}`}</p>\r\n      </div>\r\n      <div className='footer-right-section'>\r\n        {saveMeasure && <Button variant=\"contained\" color=\"inherit\" onClick={() => saveMeasure()}>Save</Button>}\r\n        {deleteMeasures && <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteMeasures()}>Delete</Button>}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => processMeasures()}>Process</Button>\r\n      </div>\r\n    </>\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return <nav>\r\n      <AppBar style={{ background: '#282c34' }}>\r\n        <Grid\r\n          justify=\"space-between\"\r\n          container>\r\n          <Grid item>\r\n            <Tabs\r\n              data-testid='navigation'\r\n              value={this.props.currentTab} onChange={(e,v) => this.props.setTab(e,v)}>\r\n              <Tab className='reporting-tab' label='Reports' />\r\n              <Tab className='editor-tab' label='Editor' />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item>\r\n            <div className='right-nav-buttons'>\r\n              {this.props.rightButtons}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </AppBar>\r\n    </nav>\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport SockJsClient from 'react-stomp';\r\n\r\nclass MeasureProgressWsClient extends Component {\r\n  render() {\r\n    if(process.env.TEST) return <></>\r\n\r\n    return <SockJsClient url={'/ws'} topics={['/topic/job']}\r\n    onMessage={(job) => {\r\n      console.log(job);\r\n      let measureList = this.props.measureList;\r\n      measureList.map(measureListItem => {\r\n        if (job.measureIds.includes(measureListItem.measureId) &&\r\n          !(job.jobStatus === 'RUNNING' && measureListItem.jobStatus !== 'RUNNING')\r\n        ) {\r\n          measureListItem.progress = job.progress;\r\n          measureListItem.jobStatus = job.jobStatus;\r\n          measureListItem.jobLastUpdated = job.lastUpdated;\r\n        }\r\n        return measureListItem;\r\n      });\r\n\r\n      this.props.updateMeasureList(measureList);\r\n    }} />\r\n  }\r\n}\r\n\r\nexport default MeasureProgressWsClient\r\n","export const _selectMeasure = (component) => {\r\n  let measureList = component.state.measureList;\r\n  return (measureId, event) => {\r\n    if (event.shiftKey || event.ctrlKey) {\r\n      component.setState({ measureList: _selectMultipleMeasuresListItemById(measureId, measureList) });\r\n    } else {\r\n      component.setState({ measureList: _selectMeasureListItemById(measureId, measureList) });\r\n    }\r\n  }\r\n}\r\n\r\nexport const _deleteMeasures = async (component) => {\r\n  let selectedMeasureIds = _getSelectedMeasureIds(component.state.measureList);\r\n  await component.props.measureRepository._deleteMeasures(selectedMeasureIds);\r\n  let measureList = component.state.measureList.filter(m => !selectedMeasureIds.includes(m.measureId));\r\n  component.setState({ measureList, measure: null });\r\n}\r\n\r\nexport const _processMeasures = async (component) => {\r\n  let selectedMeasureIds = _getSelectedMeasureIds(component.state.measureList);\r\n  component.props.measureRepository._processMeasures(selectedMeasureIds);\r\n  let measureList = component.state.measureList.map(m => {\r\n    if (selectedMeasureIds.includes(m.measureId)) {\r\n      m.jobStatus = \"RUNNING\";\r\n      m.selected = false;\r\n      return m;\r\n    };\r\n    return m;\r\n  });\r\n  component.setState({ measureList, measure: null });\r\n}\r\n\r\nconst _selectMeasureListItemById = (measureId, measureList) => {\r\n  measureList.map(measureListItem => measureListItem.selected = false)\r\n  measureList.map(measureListItem => {\r\n    if (measureListItem.measureId === measureId) {\r\n      measureListItem.selected = true;\r\n      return measureListItem;\r\n    }\r\n    return measureListItem;\r\n  })\r\n  return measureList;\r\n}\r\n\r\nconst _selectMultipleMeasuresListItemById = (measureId, measureList) => {\r\n  measureList.map(measureListItem => {\r\n    if (measureListItem.measureId === measureId) {\r\n      measureListItem.selected = true;\r\n      return measureListItem;\r\n    }\r\n    return measureListItem;\r\n  })\r\n  return measureList;\r\n}\r\n\r\nconst _getSelectedMeasureIds = (measureList) => {\r\n  let selectedMeasureIds = [];\r\n  measureList.forEach(measureListItem => {\r\n    if (measureListItem.selected) {\r\n      selectedMeasureIds.push(measureListItem.measureId);\r\n    }\r\n  });\r\n  return selectedMeasureIds;\r\n}\r\n","import React, { Component } from 'react';\r\nimport MeasureList from './MeasureList';\r\nimport Footer from './Footer';\r\nimport Navigaiton from './Navigation';\r\nimport MeasureProgressWsClient from './MeasureProgressWsClient';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { _selectMeasure, _processMeasures } from './Shared'\r\n\r\nclass Reporting extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      measure: null,\r\n      measureSummary: null,\r\n      measureList: [],\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const measureList = await this.props.measureRepository._findAllMeasureListItems();\r\n    this.setState({ measureList });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { measure, measureSummary, measureList } = this.state;\r\n\r\n    return (<>\r\n      <Navigaiton currentTab={this.props.currentTab} setTab={this.props.setTab} />\r\n      <form className='content reporting'>\r\n        <aside className='left-aside'>\r\n          <MeasureList\r\n            measuresList={this.state.measureList}\r\n            onClick={this._getMeasureResultSummary()}\r\n            selectMeasure={_selectMeasure(this)}\r\n            displayAddBtn={false}\r\n            selectedMeasureId={this.props.measure ? this.props.measure.measureId : null} />\r\n        </aside>\r\n        <div className='measure center-content' data-testid='reporting'>\r\n          {measureSummary &&\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className='step-header-2' align=\"right\">Result Code</TableCell>\r\n                  <TableCell className='step-header-1' align=\"right\">Count</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {measureSummary.map((item) => {\r\n                return <TableRow key={item.resultCode}>\r\n                  <TableCell className='step-header-2' align=\"right\">{item.resultCode}</TableCell>\r\n                  <TableCell className='step-header-1' align=\"right\">{item.count}</TableCell>\r\n                </TableRow>\r\n              })}\r\n              </TableBody>\r\n            </Table>\r\n          }\r\n          <aside className='right-aside'>\r\n          </aside>\r\n        </div>\r\n        <div className='footer'>\r\n          {measure &&\r\n            <Footer\r\n              measure={measure}\r\n              processMeasures={async () => await _processMeasures(this)} />\r\n          }\r\n        </div>\r\n      </form>\r\n      <MeasureProgressWsClient\r\n        measureList={measureList}\r\n        updateMeasureList={(measureList) => {\r\n          this.setState({ measureList })\r\n        }} />\r\n    </>)\r\n  }\r\n\r\n  _getMeasureResultSummary() {\r\n    return async (id) => {\r\n      const measure = await this.props.measureRepository._findById(id);\r\n      const measureSummary = await this.props.resultsRepository._summary(id);\r\n      this.setState({ measure, measureSummary });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reporting;\r\n","import React, { Component } from 'react';\r\nimport cx from 'classnames';\r\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\r\n\r\nclass Step extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.changeRule = this.changeRule.bind(this);\r\n    this.changeId = this.changeId.bind(this);\r\n    this.changeParam = this.changeParam.bind(this);\r\n  }\r\n\r\n  render() {\r\n    const { step, rules, deleteStep } = this.props.item;\r\n    const { itemSelected, dragHandle } = this.props;\r\n    const scale = itemSelected * 0.05 + 1;\r\n    const shadow = itemSelected * 15 + 1;\r\n    const dragged = itemSelected !== 0;\r\n    return <div\r\n      className={cx('step', { dragged })}\r\n      style={{\r\n        transform: `scale(${scale})`,\r\n        boxShadow: `rgba(0, 0, 0, 0.3) 0px ${shadow}px ${2 * shadow}px 0px`\r\n      }}\r\n    >\r\n      {dragHandle(<div className=\"dragHandle\" />)}\r\n      <input type='text' defaultValue={step.stepId} onChange={(e) => { this.changeId(e, \"stepId\") }} />\r\n      <select value={step.ruleName} onChange={(e) => this.changeRule(e)}>\r\n        {rules.map((ruleName) => <option key={ruleName}> {ruleName} </option>)}\r\n      </select>\r\n      <input type='text' defaultValue={step.successStepId} onChange={(e) => { this.changeId(e, \"successStepId\") }} />\r\n      <input type='text' defaultValue={step.failureStepId} onChange={(e) => { this.changeId(e, \"failureStepId\") }} />\r\n      <DeleteTwoToneIcon className='delete-step-icon' onClick={() => { deleteStep(step.id) }} />\r\n      <div className='parameters'>\r\n        {step.parameters.map((param, index) => {\r\n          return (<div key={param.ruleParamId} className='param-editor'>\r\n            <div className='param-name'>{param.paramName}</div>\r\n            <input\r\n              className='param-value'\r\n              type='text' defaultValue={param.paramValue} placeholder={this._getPlaceHolder(param)}\r\n              onChange={(e) => this.changeParam(e, index)} />\r\n          </div>)\r\n        })}\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  changeRule(e) {\r\n    let { step, ruleParams, onChangeStep } = this.props.item;\r\n    step.ruleName = e.target.value;\r\n    step.parameters = ruleParams.filter(ruleParam => ruleParam.paramName && ruleParam.ruleName === e.target.value);\r\n    onChangeStep(step);\r\n  }\r\n\r\n  changeId(e, field) {\r\n    let { step, onChangeStep } = this.props.item;\r\n    step[field] = parseInt(e.target.value);\r\n    onChangeStep(step);\r\n  }\r\n\r\n  changeParam(e, index) {\r\n    let { step, onChangeStep } = this.props.item;\r\n    step.parameters[index].paramValue = e.target.value;\r\n    onChangeStep(step);\r\n  }\r\n\r\n  getDragHeight() {\r\n    const DRAG_HEIGHT = 30;\r\n    return DRAG_HEIGHT;\r\n  }\r\n\r\n  _getPlaceHolder(param) {\r\n    if(param.paramType === 'DATE') return 'YYYYMMDD'\r\n    if(param.paramType === 'INTEGER') return '###'\r\n  }\r\n\r\n}\r\n\r\nexport default Step;\r\n","export const distinct = (arr) => {\r\n  var u = {}, a = [];\r\n  for (var i = 0, l = arr.length; i < l; ++i) {\r\n    if (!u.hasOwnProperty(arr[i])) {\r\n      a.push(arr[i]);\r\n      u[arr[i]] = 1;\r\n    }\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nexport const ramdomInt = () => {\r\n  return Math.floor(Math.random() * 1000) + 1;\r\n}\r\n\r\nexport const compare = (a, b) => {\r\n  if (a.measureName < b.measureName)\r\n    return -1;\r\n  if (a.measureName > b.measureName)\r\n    return 1;\r\n  return 0;\r\n}\r\n\r\nexport const headers = {\r\n  \"Content-Type\": \"application/json\"\r\n};\r\n\r\nexport function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import React, { Component } from 'react';\r\nimport DraggableList from 'react-draggable-list';\r\nimport MeasureList from './MeasureList';\r\nimport Footer from './Footer';\r\nimport Step from './Step';\r\nimport { compare, distinct, ramdomInt } from './Utilities';\r\nimport { _selectMeasure, _deleteMeasures, _processMeasures } from './Shared'\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Navigaiton from './Navigation';\r\nimport MeasureProgressWsClient from './MeasureProgressWsClient';\r\n\r\nclass MeasureEditor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ruleParams: [],\r\n      measureList: [],\r\n      measure: null,\r\n    }\r\n    this._changeStep = this._changeStep.bind(this);\r\n    this._changeName = this._changeName.bind(this);\r\n    this._changeDescription = this._changeDescription.bind(this);\r\n    this._stepReorder = this._stepReorder.bind(this);\r\n    this._addMeasure = this._addMeasure.bind(this);\r\n    this._saveMeasure = this._saveMeasure.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const ruleParams = await this.props.measureRepository._findAllRuleParams();\r\n    const measureList = await this.props.measureRepository._findAllMeasureListItems();\r\n    this.setState({ ruleParams, measureList });\r\n  }\r\n\r\n  render() {\r\n    const { measure, ruleParams, measureList } = this.state;\r\n    const rules = this._getUniqueRuleNames(ruleParams);\r\n    let hasSteps = measure && measure.measureLogic && measure.measureLogic.steps\r\n    let steps;\r\n\r\n    if (hasSteps) {\r\n      steps = measure.measureLogic.steps.map((step, index) => {\r\n        return {\r\n          step,\r\n          rules,\r\n          index,\r\n          ruleParams,\r\n          key: step.id,\r\n          onChangeStep: this._changeStep(),\r\n          deleteStep: this._deleteStep(),\r\n        }\r\n      });\r\n    }\r\n\r\n    return <>\r\n      <Navigaiton\r\n        currentTab={this.props.currentTab}\r\n        setTab={this.props.setTab}\r\n        rightButtons={\r\n          <>\r\n            {measure && <Button\r\n              color=\"inherit\" className='add-step'\r\n              onClick={async () => await this._addStep(rules)}>+ Step</Button>}\r\n            <Button color=\"inherit\"\r\n              onClick={this._addMeasure()}>+ Measure</Button>\r\n          </>\r\n        }\r\n      />\r\n      <form className='content measure-editor'>\r\n        <aside className='left-aside'>\r\n          <MeasureList\r\n            measuresList={measureList}\r\n            onClick={this._getMeasure()}\r\n            selectMeasure={_selectMeasure(this)}\r\n            selectedMeasureId={measure ? measure.measureId : null}\r\n            addMeasure={this._addMeasure()} />\r\n        </aside>\r\n        <div className='measure center-content' data-testid='measure'>\r\n          {measure &&\r\n            <>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className='step-header-1' align=\"right\">Step ID</TableCell>\r\n                    <TableCell className='step-header-2' align=\"right\">Rule</TableCell>\r\n                    <TableCell className='step-header-1' align=\"right\">Success Step ID</TableCell>\r\n                    <TableCell className='step-header-1' align=\"right\">Failure Step ID</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </>}\r\n          <div>\r\n            {hasSteps &&\r\n              <DraggableList\r\n                itemKey=\"key\"\r\n                template={Step}\r\n                list={steps}\r\n                onMoveEnd={(newList, movedItem, oldIndex, newIndex) => {\r\n                  this._stepReorder(newList, movedItem, oldIndex, newIndex);\r\n                }}\r\n                container={() => document.body}\r\n              />}\r\n          </div>\r\n        </div>\r\n        {measure &&\r\n          <aside className='right-aside'>\r\n            <TextField\r\n              label=\"Measure Name\"\r\n              data-testid='measure-name'\r\n              value={measure.measureName}\r\n              onChange={(e) => this._changeName(e)}\r\n              margin=\"normal\" />\r\n            <TextField\r\n              label=\"Description\"\r\n              multiline\r\n              rowsMax=\"20\"\r\n              value={measure.measureLogic.description}\r\n              onChange={(e) => this._changeDescription(e)}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n          </aside>}\r\n        <div className='footer'>\r\n          {measure &&\r\n            <Footer\r\n              measure={measure}\r\n              saveMeasure={async () => await this._saveMeasure()}\r\n              deleteMeasures={async () => await _deleteMeasures(this)}\r\n              processMeasures={async () => await _processMeasures(this)} />\r\n          }\r\n        </div>\r\n      </form>\r\n      <MeasureProgressWsClient\r\n        measureList={measureList}\r\n        updateMeasureList={(measureList) => {\r\n          this.setState({ measureList })\r\n        }} />\r\n    </>\r\n  }\r\n\r\n  _changeName(e) {\r\n    let measure = this.state.measure;\r\n    measure.measureName = e.target.value;\r\n    this.setState({ measure });\r\n  }\r\n\r\n  _changeDescription(e) {\r\n    let measure = this.state.measure;\r\n    measure.measureLogic.description = e.target.value;\r\n    this.setState({ measure });\r\n  }\r\n\r\n  _changeStep() {\r\n    return (step) => {\r\n      let { measure } = this.state;\r\n      measure.measureLogic.steps[step.index] = step;\r\n      this.setState({ measure });\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  _stepReorder(newList, movedItem, oldIndex, newIndex) {\r\n    let { measure } = this.state;\r\n    measure.measureLogic.steps = newList.map((item) => JSON.parse(JSON.stringify(item.step)));\r\n    this.setState({ measure });\r\n  }\r\n\r\n  _addStep(rules) {\r\n    let measure = this.state.measure;\r\n    if (!measure.measureLogic.steps) {\r\n      measure.measureLogic.steps = [];\r\n    }\r\n\r\n    measure.measureLogic.steps.push({\r\n      rules,\r\n      id: ramdomInt(),\r\n      ruleName: \"(select)\",\r\n      parameters: [],\r\n      stepId: 0,\r\n      successStepId: 0,\r\n      failureStepId: 0\r\n    })\r\n    this.setState({ measure });\r\n  }\r\n\r\n  _getMeasure() {\r\n    return async (id) => {\r\n      const measure = await this.props.measureRepository._findById(id);\r\n      this.setState({ measure });\r\n    }\r\n  }\r\n\r\n  _getUniqueRuleNames(ruleParams) {\r\n    let ruleNames = ['(select)'];\r\n    ruleParams.forEach(ruleParam => ruleNames.push(ruleParam.ruleName));\r\n    return distinct(ruleNames).sort()\r\n  }\r\n\r\n  _addMeasure() {\r\n    const DEFAULT_NEW_MEASURE = {\r\n      measureName: 'New Measure',\r\n      measureLogic: {\r\n        description: 'Describe...'\r\n      }\r\n    }\r\n\r\n    return async () => {\r\n      let measure = await this.props.measureRepository._saveMeasure(DEFAULT_NEW_MEASURE);\r\n      let { measureList } = this.state;\r\n      measureList.push({\r\n        measureId: measure.measureId,\r\n        measureName: measure.measureName,\r\n        jobStatus: 'IDLE'\r\n      });\r\n      measureList.sort(compare);\r\n      this.setState({ measure, measureList });\r\n    }\r\n  }\r\n\r\n  async _saveMeasure() {\r\n    let measure = await this.props.measureRepository._saveMeasure(this.state.measure);\r\n    let measureList = await this.props.measureRepository._findAllMeasureListItems();\r\n    measureList.map(measureListItem => {\r\n      if (measureListItem.measureId === measure.measureId) {\r\n        measureListItem.selected = true;\r\n        return measureListItem;\r\n      }\r\n      return measureListItem;\r\n    });\r\n    this.setState({ measure, measureList })\r\n    return measure;\r\n  }\r\n\r\n  _deleteStep() {\r\n    return (id) => {\r\n      let steps = this.state.measure.measureLogic.steps.filter(s => s.id !== id);\r\n      let measure = this.state.measure;\r\n      measure.measureLogic.steps = steps;\r\n      this.setState({ measure });\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeasureEditor\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Reporting from './Reporting';\r\nimport MeasureEditor from './MeasureEditor';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentTabValue: 0\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className='container'>\r\n      <div className='content' data-testid='content'>\r\n        {(() => {\r\n          switch (this.state.currentTabValue) {\r\n            case 0: return <Reporting\r\n              setTab={this._setTab()}\r\n              currentTab={this.state.currentTabValue}\r\n              measureRepository={this.props.measureRepository}\r\n              resultsRepository={this.props.resultsRepository} />;\r\n            case 1: return <MeasureEditor\r\n              setTab={this._setTab()}\r\n              currentTab={this.state.currentTabValue}\r\n              measureRepository={this.props.measureRepository} />;\r\n            default: return <Reporting\r\n              setTab={this._setTab()}\r\n              currentTab={this.state.currentTabValue}\r\n              measureRepository={this.props.measureRepository}\r\n              resultsRepository={this.props.resultsRepository} />;\r\n          }\r\n        })()}\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  _setTab() {\r\n    return (e, v) => {\r\n      this.setState({ currentTabValue: v })\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { headers, ramdomInt } from '../Utilities';\r\n\r\nexport class MeasureRepository {\r\n\r\n  async _deleteMeasures(measureIds) {\r\n    fetch(`/measure`, { headers, method: 'DELETE', body: JSON.stringify(measureIds) })\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _findAllRuleParams() {\r\n    return fetch('/rules_params')\r\n      .then((response) => response.json())\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _findAllMeasureListItems() {\r\n    return fetch('/measure_list')\r\n      .then((response) => response.json())\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _processMeasures(measureIds) {\r\n    return fetch(`/process`, { headers, method: 'POST', body: JSON.stringify(measureIds) })\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _saveMeasure(body) {\r\n    return await fetch('/measure', { headers, method: 'PUT', body: JSON.stringify(body) })\r\n      .then((response) => response.json())\r\n      .then((json) => this._formatMeasureJson(json))\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _findById(id) {\r\n    return await fetch(`/measure?measureId=${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => this._formatMeasureJson(json))\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  _formatMeasureJson(json) {\r\n    if (json.measureLogic.steps) {\r\n      json.measureLogic.steps.map(step => {\r\n        step.id = ramdomInt();\r\n        if(step.parameters) {\r\n          step.parameters.map(param => {\r\n            if(!param.ruleParamId) {\r\n              param.ruleParamId = ramdomInt();\r\n            }\r\n            return param;\r\n          });\r\n        }\r\n        return step;\r\n      });\r\n      return json;\r\n    }\r\n    return json;\r\n  }\r\n}\r\n","export class ResultsRepository {\r\n\r\n  async _summary(measureId) {\r\n    return fetch(`/results_summary?measureId=${measureId}`)    \r\n      .then((response) => response.json())\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _detail(measureId) {\r\n    return fetch(`/results_detail?measureId=${measureId}`) \r\n      .then((response) => response.json())\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  async _ruleTrace(measureId) {\r\n    return fetch(`/rule_trace?measureId=${measureId}`) \r\n      .then((response) => response.json())\r\n      .catch((e) => console.error(e));\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-roboto';\r\nimport { MeasureRepository } from './repositories/WebMeasureRepository'\r\nimport { ResultsRepository } from './repositories/WebResultsRepository'\r\n\r\nReactDOM.render(<App measureRepository={new MeasureRepository()} resultsRepository={new ResultsRepository()} />,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}